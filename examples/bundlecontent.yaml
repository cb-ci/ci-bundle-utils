---
# bundle.yaml
apiVersion: "1"
id: "jenkins"
description: "Autogenerated bundle descriptor"
version: "1"
jcasc:
  - "jenkins.yaml"
plugins:
  - "plugins.yaml"
rbac:
  - "rbac.yaml"
items:
  - "items.yaml"

---
# jenkins.yaml
credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "Github Token for reading bundles"
          id: "github-token-ro"
          password: "{AQAAABAAAABgI1/kjoID6uzs9eREPTdCMgh7XD8dugVRC7Li4O2Ic08X9ii4ORwVyW0jUmdjZoAhlLoYejAvudfjO+Jri9o7tOdGpsOc4d+ndWKnNTTKNc8vLqflk8QrdKl9Oyxibz0xWe3p0KuVkKdTOjWrWBDdRg==}"
          scope: GLOBAL
          username: "sboardwell"
      - usernamePassword:
          description: "Github Token for autocorrecting bundles"
          id: "github-token-rw"
          password: "{AQAAABAAAABgVeKUUi2dIKI4F4uHrWQP8rysz1AGcVUi58187pFmRXtYT3BVTtx+myMg993dJVQDdU/JoRydAtrN7DHxXGzs1wbdg3wiDk6F5IylHZ9HWg4lASAMDyf3UbQEK+B/nQn622eViXJ+/i8wANntRumy7A==}"
          scope: GLOBAL
          username: "sboardwell"
      - string:
          id: "github-org-hooks"
          scope: GLOBAL
          secret: "{AQAAABAAAABgrM6JGPRNBEwg+IaSB+qIVlmPDmd1ox1Od4en72JE/izJN4nvOEUJWWxy62/NRsUK6aNFHFjfA45337ZmA3mtJ5dHTRcbnCKCFYdGWd7Q3m6eLNMv0mb17mG9bfqOoucStEExbeRsQrkzBNwdUZ+ScA==}"
      - string:
          id: "github-org-hooks-shared-secret"
          scope: GLOBAL
          secret: "{AQAAABAAAAAgUAJS+Xp2FMaVb9iTj6ceOMWrI3DTrNr8wbpaR3V0qXo5SI425/ROyW1z+vuDdpCi}"
      - string:
          id: "casc-validation-key"
          scope: GLOBAL
          secret: "{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}"
      - string:
          id: "casc-validation-cert"
          scope: GLOBAL
          secret: "{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}"
jenkins:
  agentProtocols:
  - "Diagnostic-Ping"
  - "JNLP4-connect"
  - "OperationsCenter2"
  - "Ping"
  authorizationStrategy: "cloudBeesRoleBasedAccessControl"
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      name: "test-cloud"
      templates:
      - containers:
        - args: "9999999"
          command: "sleep"
          image: "debian"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "debian"
          workingDir: "/home/jenkins/agent"
        id: "116983fa-ba36-4530-9a8e-c9eb05b79584"
        label: "test-debian"
        name: "test-debian"
        showRawYaml: false
        yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "com.cloudbees.jenkins.plugins.administrative_monitors.CJOCBuildSecurityMonitor"
  - "jenkins.diagnostics.ControllerExecutorsAgents"
  labelAtoms:
  - name: "built-in"
  - name: "test-another"
  - name: "test-debian"
  - name: "test-two"
  log:
    recorders:
    - loggers:
      - level: "FINE"
        name: "com.cloudbees.casc.server"
      name: "casc"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  noUsageStatistics: true
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GB"
      freeSpaceWarningThreshold: "2GB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GB"
      freeSpaceWarningThreshold: "2GB"
  - "responseTime"
  numExecutors: 1
  primaryView:
    masters:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "manageMaster"
      - "masterPodStatusViewColumn"
      - "masterConfigurationStaleViewColumn"
      - "totalJobsViewColumn"
      - "queueSizeViewColumn"
      - "jenkinsVersionViewColumn"
      - "listSelectionColumn"
      jobFilters:
      - "connectedMasterViewFilter"
      name: "Controllers"
      recurse: true
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Administrator"
        properties:
        - "apiToken"
        - "consoleUrlProvider"
        - "blueSteelRedirectOptOutProperty"
        - preferredProvider:
            providerId: "default"
        - "experimentalFlags"
        - mailer:
            emailAddress: "admin@example.com"
      - id: "admin-lite"
        name: "Administrator Lite"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "admin-lite@example.com"
      - id: "browser"
        name: "Browser User"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "browser@example.com"
      - id: "casc-validator"
        name: "CasC Validator"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "validator@example.com"
      - id: "developer"
        name: "Developer User"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "dev@example.com"
      - id: "ext-reader"
        name: "ExtendedReader User"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "ext-reader@example.com"
      - id: "manager"
        name: "Manager User"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "manager@example.com"
      - id: "swarm"
        name: "Swarm User"
        properties:
        - "apiToken"
        - "blueSteelRedirectOptOutProperty"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - "experimentalFlags"
        - "consoleUrlProvider"
        - mailer:
            emailAddress: "swarm@example.com"
  slaveAgentPort: 50000
  systemMessage: "Hello People! How are you? Here we are!"
  updateCenter:
    sites:
    - id: "core-oc-offline"
      url: "file:/tmp/jenkins/war/WEB-INF/plugins/update-center.json"
    - id: "cap-core-oc"
      url: "https://jenkins-updates.cloudbees.com/update-center/envelope-core-oc/update-center.json"
  views:
  - masters:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "manageMaster"
      - "masterPodStatusViewColumn"
      - "masterConfigurationStaleViewColumn"
      - "totalJobsViewColumn"
      - "queueSizeViewColumn"
      - "jenkinsVersionViewColumn"
      - "listSelectionColumn"
      jobFilters:
      - "connectedMasterViewFilter"
      name: "Controllers"
      recurse: true
  - all:
      name: "all"
  viewsTabBar: "standard"
advisor:
  acceptToS: true
  email: "sboardwell@cloudbees.com"
  excludedComponents:
  - "AgentsSystemConfiguration"
  - "KubernetesMasterLogs"
  - "AgentsJVMProcessSystemMetricsContents"
  - "ConfigFileComponent"
  - "RootCAs"
  - "HeapUsageHistogram"
  - "OtherLogs"
  - "SlaveLaunchLogs"
  - "NodeExecutors"
  - "GCLogs"
  - "AgentsConfigFile"
  - "SlaveLogs"
  - "OtherConfigFilesComponent"
  nagDisabled: false
beekeeper:
  enabled: true
  securityWarnings:
    enabledForCore: true
    enabledForPlugins: true
  upgrades:
    autoDowngradePlugins: false
    autoUpgradePlugins: false
cloudBeesCasCServer:
  disableRemoteValidation: false
  visibility: true
controllerLifecycleNotifications:
  authenticator: "none"
  enabled: true
  ignoreTlsConnectionErrors: false
  webhookUrl: "http://lifecycle-notification-server:5001/"
license:
  certificate: |-
    -----BEGIN CERTIFICATE-----
    1702seY+DH+iZgXaoyPnErFckkd+cgVQ
    -----END CERTIFICATE-----
  key: |-
    -----BEGIN RSA PRIVATE KEY-----
    G6jGVuRsNXrMyevENl5wE2BQoQ+g8T81dTlAM/Abm7bW+Sv5xs7ZbA==
    -----END RSA PRIVATE KEY-----
masterprovisioning:
  dockerImageDefinitionConfiguration:
    images:
    - imageTag: "cloudbees/cloudbees-core-mm:2.440.3.7"
      name: "CloudBees CI - Managed Controller - 2.440.3.7"
    - imageTag: "cloudbees/cloudbees-core-mm:2.440.2.1"
      name: "CloudBees CI - Managed Controller - 2.440.2.1"
    - imageTag: "cloudbees/cloudbees-core-mm:latest"
      name: "CloudBees CI - Managed Controller - latest"
  kubernetes:
    clusterEndpoints:
    - id: "default"
      jenkinsUrl: "http://cjoc.cloudbees-core.svc.cluster.local/"
      name: "kubernetes"
      serviceExposure:
        ingress:
          ingressAnnotations: |-
            alb.ingress.kubernetes.io/group.name: cloudbees-core-cloudbees-core
            alb.ingress.kubernetes.io/healthcheck-path: "/whoAmI/api/json?tree=authenticated"
            alb.ingress.kubernetes.io/listen-ports: "[{\"HTTP\":80}, {\"HTTPS\":443}]"
            alb.ingress.kubernetes.io/scheme: internet-facing
            alb.ingress.kubernetes.io/ssl-redirect: "443"
            alb.ingress.kubernetes.io/target-type: ip
            kubernetes.io/tls-acme: "false"
          ingressClass: "alb"
    cpus: "1.5"
    disk: 10
    envVars: "SECRETS=/run/secrets/casc-secrets-mc"
    fsGroup: "1000"
    globalJavaOptions: "-Dorg.csanchez.jenkins.plugins.kubernetes.pipeline.PodTemplateStepExecution.defaultImage=cloudbees/cloudbees-core-agent:2.440.3.7\
      \ -Dcom.cloudbees.jenkins.plugins.kube.ServiceAccountFilter.defaultServiceAccount=jenkins-agents\
      \ -Dcom.cloudbees.networking.useSubdomain=true -Dcom.cloudbees.networking.protocol=\"\
      https\" -Dcom.cloudbees.networking.hostname=\"eks.sboardwell.aws.ps.beescloud.com\"\
      \ -Dcom.cloudbees.networking.port=443 -Dcom.cloudbees.networking.operationsCenterName=\"\
      cjoc\""
    javaOptions: "-XshowSettings:vm -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled\
      \ -XX:+UseStringDeduplication -Dhudson.slaves.NodeProvisioner.initialDelay=0"
    livenessInitialDelaySeconds: 300
    livenessPeriodSeconds: 10
    livenessTimeoutSeconds: 10
    memory: 4096
    readinessFailureThreshold: 100
    readinessInitialDelaySeconds: 30
    readinessTimeoutSeconds: 5
    terminationGracePeriodSeconds: 1200
    yaml: |-
      ---
      apiVersion: v1
      kind: Service
      metadata:
        annotations:
          prometheus.io/path: //prometheus/
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
      ---
      apiVersion: "apps/v1"
      kind: "StatefulSet"
      spec:
        template:
          spec:
            volumes:
            - name: casc-bundle
              configMap:
                name: REPLACE_ME_WITH_A_CONFIGMAP
            - name: casc-secrets-mc-volume
              secret:
                secretName: oc-secrets
            containers:
            - name: "jenkins"
              volumeMounts:
                - mountPath: "/run/secrets/casc-secrets-mc"
                  name: "casc-secrets-mc-volume"
                - name: casc-bundle
                  mountPath: /var/jenkins_config/casc-bundle
kube:
  podTemplatesConfiguration:
    templates:
    - containers:
      - args: "9999999"
        command: "sleep"
        image: "debian"
        livenessProbe:
          failureThreshold: 0
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        name: "debian"
        workingDir: "/home/jenkins/agent"
      id: "4791a4d6-d50c-47f9-86bc-88d030f445e4"
      label: "test-another test-two"
      name: "test-another"
      yamlMergeStrategy: "override"
support:
  automatedBundleConfiguration:
    componentIds:
    - "CloudBeesAssuranceSupport"
    - "CloudBeesCasCUpdateLogBundlesSupport"
    - "AgentsConfigFile"
    - "ConfigFileComponent"
    - "OtherConfigFilesComponent"
    - "AboutBrowser"
    - "AboutJenkins"
    - "AboutUser"
    - "AdministrativeMonitors"
    - "AgentProtocols"
    - "BuildQueue"
    - "CustomLogs"
    - "DumpExportTable"
    - "EnvironmentVariables"
    - "FileDescriptorLimit"
    - "GCLogs"
    - "HeapUsageHistogram"
    - "ItemsContent"
    - "AgentsJVMProcessSystemMetricsContents"
    - "MasterJVMProcessSystemMetricsContents"
    - "JenkinsLogs"
    - "LoadStats"
    - "LoggerManager"
    - "Metrics"
    - "NetworkInterfaces"
    - "NodeMonitors"
    - "OtherLogs"
    - "ReverseProxy"
    - "RootCAs"
    - "RunningBuilds"
    - "SlaveCommandStatistics"
    - "SlaveLaunchLogs"
    - "SlaveLogs"
    - "AgentsSystemConfiguration"
    - "MasterSystemConfiguration"
    - "SystemProperties"
    - "TaskLogs"
    - "ThreadDumps"
    - "UpdateCenter"
    - "UserCount"
    - "ComponentImpl"
    - "SlowRequestComponent"
    - "HighLoadComponent"
    - "DeadlockRequestComponent"
    - "KubernetesMasterLogs"
    - "KubernetesMasterManifests"
    - "ConnectedMasterSupportComponent"
    - "PipelineTimings"
    - "PipelineThreadDump"
    enabled: false
    period: 12
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
security:
  anonymizeSupportBundle:
    enabled: false
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  controllerExecutorCount:
    enforce:
      canOverride: false
      count: 0
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
  securitySettingsEnforcement:
    global:
      realmAndAuthorization:
        canCustomMapping: false
        canOverride: false
        defaultMappingFactory: "restrictedEquivalentRAMF"
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  bundleStorageService:
    activated: true
    bundles:
    - name: "effective-bundles"
      polling: false
      retriever:
        SCM:
          scmSource:
            git:
              credentialsId: "github-token-ro"
              id: "b1b6609f-7b30-45e5-87ee-a6fcda8b2c41"
              remote: "https://github.com/tsmp-falcon-platform/ci-bundles-controllers-git-sync-effective"
              traits:
              - "gitBranchDiscovery"
              - headWildcardFilter:
                  includes: "v*"
    checkOutTimeout: 600
    pollingPeriod: 3600
    purgeOnDeactivation: false
  bundleUpdateTiming:
    automaticReload: true
    automaticRestart: true
    rejectWarnings: true
    reloadAlwaysOnRestart: false
    skipNewVersions: false
  cascAutoControllerProvisioning:
    duration: 60
    fireAndForget: true
    initialDelay: 15
    provisionControllerOnCreation: true
    timeout: 600
  cascItemsConfiguration:
    variableInterpolationEnabledForAdmin: true
    variableInterpolationEnabledForNonAdmin: true
  cloudbeesPrometheus:
    collectingMetricsPeriodInSeconds: 120
    defaultNamespace: "cb_ci"
    path: "prometheus"
    useAuthenticatedEndpoint: false
  experimentalPlugins:
    enabled: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    configs:
    - credentialsId: "github-org-hooks"
    hookUrl: "https://cjoc.eks.sboardwell.aws.ps.beescloud.com/github-webhook/"
  headerLabel:
    propagate:
      enforce: true
    text: "CASC OPERATIONS CENTER"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "https://cjoc.eks.sboardwell.aws.ps.beescloud.com/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  operationsCenterSharedConfiguration:
    enabled: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  usageStatisticsCloudBees:
    disabledJenkinsUsageStatistics: true
    usageStatisticsCollected: true
  validationVisualization:
    quiet: false
tool:
  cloudbeesPluginUsageAnalyzer:
    enabled: true
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"

---
# plugins.yaml
plugins:
- id: ace-editor
- id: antisamy-markup-formatter
- id: apache-httpcomponents-client-4-api
- id: asm-api
- id: authentication-tokens
- id: aws-credentials
- id: aws-java-sdk-ec2
- id: aws-java-sdk-elasticbeanstalk
- id: aws-java-sdk-minimal
- id: blueocean-commons
- id: bootstrap5-api
- id: bouncycastle-api
- id: caffeine-api
- id: cloudbees-administrative-monitors
- id: cloudbees-analytics
- id: cloudbees-assurance
- id: cloudbees-blueocean-default-theme
- id: cloudbees-casc-client
- id: cloudbees-casc-items-api
- id: cloudbees-casc-items-commons
- id: cloudbees-casc-items-server
- id: cloudbees-casc-server
- id: cloudbees-folder
- id: cloudbees-folders-plus
- id: cloudbees-jenkins-advisor
- id: cloudbees-license
- id: cloudbees-monitoring
- id: cloudbees-platform-common
- id: cloudbees-platform-data
- id: cloudbees-plugin-usage
- id: cloudbees-prometheus
- id: cloudbees-support
- id: cloudbees-uc-data-api
- id: cloudbees-unified-ui
- id: cloudbees-update-center-plugin
- id: command-launcher
- id: commons-lang3-api
- id: commons-text-api
- id: configuration-as-code
- id: credentials
- id: credentials-binding
- id: display-url-api
- id: docker-commons
- id: durable-task
- id: font-awesome-api
- id: git
- id: git-client
- id: github
- id: github-api
- id: github-branch-source
- id: gson-api
- id: handy-uri-templates-2-api
- id: infradna-backup
- id: instance-identity
- id: ionicons-api
- id: jackson2-api
- id: jakarta-activation-api
- id: jakarta-mail-api
- id: javax-activation-api
- id: javax-mail-api
- id: jaxb
- id: jdk-tool
- id: jjwt-api
- id: joda-time-api
- id: jquery3-api
- id: json-api
- id: json-path-api
- id: kube-agent-management
- id: kubernetes
- id: kubernetes-client-api
- id: kubernetes-credentials
- id: mailer
- id: mapdb-api
- id: master-provisioning-kubernetes
- id: metrics
- id: mina-sshd-api-common
- id: mina-sshd-api-core
- id: mina-sshd-api-scp
- id: mina-sshd-api-sftp
- id: nectar-license
- id: nectar-rbac
- id: node-iterator-api
- id: oauth-credentials
- id: okhttp-api
- id: operations-center-agent
- id: operations-center-clusterops
- id: operations-center-context
- id: operations-center-elasticsearch-provider
- id: operations-center-jnlp-controller
- id: operations-center-kubernetes-cloud
- id: operations-center-license
- id: operations-center-monitoring
- id: operations-center-rbac
- id: operations-center-server
- id: operations-center-sso
- id: operations-center-updatecenter
- id: operations-center-webhooks
- id: plain-credentials
- id: plugin-util-api
- id: prism-api
- id: scm-api
- id: script-security
- id: snakeyaml-api
- id: ssh-credentials
- id: sshd
- id: structs
- id: support-core
- id: token-macro
- id: trilead-api
- id: unique-id
- id: user-activity-monitoring
- id: variant
- id: workflow-api
- id: workflow-durable-task-step
- id: workflow-scm-step
- id: workflow-step-api
- id: workflow-support

---
# rbac.yaml
removeStrategy:
  rbac: SYNC
roles:
- filterable: true
  permissions:
  - hudson.model.Hudson.Read
  name: authenticated
- filterable: true
  permissions:
  - hudson.model.Hudson.Read
  name: validate-casc
- filterable: true
  permissions:
  - hudson.model.Computer.Connect
  - hudson.model.Computer.Configure
  - hudson.model.Computer.Create
  name: swarm
- filterable: true
  permissions:
  - hudson.model.Hudson.Read
  - hudson.model.Hudson.SystemRead
  - hudson.model.Item.Read
  name: ext-read
- filterable: true
  permissions:
  - hudson.model.Hudson.Read
  - hudson.model.Item.Read
  name: browser
- permissions:
  - hudson.model.Hudson.RunScripts
  - hudson.model.Hudson.Administer
  name: administer
- name: anonymous
- filterable: true
  permissions:
  - hudson.model.Hudson.Read
  - hudson.model.Item.Read
  - hudson.model.Item.Create
  - hudson.model.Item.Configure
  name: developer
- filterable: true
  permissions:
  - hudson.model.Hudson.Read
  - hudson.model.Item.Read
  - hudson.model.Hudson.Manage
  name: manage
groups:
- members:
    users:
    - admin
  roles:
  - name: administer
    grantedAt: current
  name: Administrators
- members:
    users:
    - developer
  roles:
  - name: developer
    grantedAt: child
  name: Developers
- members:
    users:
    - browser
  roles:
  - name: browser
    grantedAt: current
  name: Browsers
- members:
    users:
    - casc-validator
  roles:
  - name: validate-casc
    grantedAt: current
  name: CasC-Validators
- members:
    internal_groups:
    - Managers
    users:
    - manager
  roles:
  - name: manage
    grantedAt: child
  name: Managers
- members:
    users:
    - ext-reader
  roles:
  - name: ext-read
    grantedAt: child
  name: ExtendedReaders
- members:
    users:
    - admin-lite
  roles:
  - name: browser
    grantedAt: current
  - name: developer
    grantedAt: child
  - name: ext-read
    grantedAt: child
  - name: manage
    grantedAt: child
  name: AdminLite
- members:
    users:
    - swarm
  roles:
  - name: swarm
    grantedAt: child
  name: Swarm

---
# items.yaml
removeStrategy:
  rbac: SYNC
  items: NONE
items:
- kind: managedController
  name: admin-controller
  configuration:
    kubernetes:
      allowExternalAgents: false
      terminationGracePeriodSeconds: 1200
      image: CloudBees CI - Managed Controller - 2.440.3.7
      memory: 4096
      fsGroup: '1000'
      cpus: 1.5
      readinessTimeoutSeconds: 5
      livenessInitialDelaySeconds: 300
      systemProperties: com.cloudbees.jenkins.plugins.pipeline.explorer.log.viewer.AdvancedConsoleAction.MAP_ENABLED=true
      readinessInitialDelaySeconds: 30
      clusterEndpointId: default
      disk: 10
      readinessFailureThreshold: 100
      livenessTimeoutSeconds: 10
      domain: admin-controller
      livenessPeriodSeconds: 10
      javaOptions: -XshowSettings:vm -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled
        -XX:+UseStringDeduplication -Dhudson.slaves.NodeProvisioner.initialDelay=0
      yaml: |-
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/path: //prometheus/
            prometheus.io/port: "8080"
            prometheus.io/scrape: "true"
        ---
        apiVersion: "apps/v1"
        kind: "StatefulSet"
        spec:
          template:
            spec:
              volumes:
              - name: casc-secrets-mc-volume
                secret:
                  secretName: oc-secrets
              initContainers:
                - name: upgrade-checker
                  image: ^${imageTag}
                  command: [ "sh", "-c"]
                  args:
                  - |-
                    #!/usr/bin/env bash
                    set -euo pipefail
                    LAST_VERSION_FILE="/var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion"
                    BUNDLE_UPDATE_CONF="/var/jenkins_home/bundle-update.properties"
                    IMAGE_WAR="/usr/share/jenkins/jenkins.war"
                    IMAGE_MANIFEST="META-INF/MANIFEST.MF"
                    log() { echo "UPGRADE-CHECKER: $*"; }
                    log "Checking if we need to enable reload.always.onrestart..."
                    if [ -f "$LAST_VERSION_FILE" ] && [ -f "$BUNDLE_UPDATE_CONF" ]; then
                        LAST_VERSION=$(cat "$LAST_VERSION_FILE")
                        log "Last version: $LAST_VERSION"
                        MYTEMP=$(mktemp -d)
                        cd "$MYTEMP" || exit 1
                        jar -xf "$IMAGE_WAR" "$IMAGE_MANIFEST"
                        THIS_VERSION=$(grep -oP "^Version: \K[\d.]+(?=\s*)" "$IMAGE_MANIFEST")
                        log "This version: $THIS_VERSION"
                        if [ "$THIS_VERSION" != "$LAST_VERSION" ]; then
                            log "Enabling reload.always.onrestart..."
                            sed -i 's/reload.always.onrestart=.*/reload.always.onrestart=true/g' "$BUNDLE_UPDATE_CONF"
                        else
                            log "No need to enable reload.always.onrestart - versions are the same"
                        fi
                    else
                        log "No need to enable reload.always.onrestart - either $LAST_VERSION_FILE or $BUNDLE_UPDATE_CONF is missing"
                    fi
                  volumeMounts:
                  - mountPath: /var/jenkins_home
                    name: jenkins-home
              containers:
              - name: "jenkins"
                volumeMounts:
                  - mountPath: "/run/secrets/casc-secrets-mc"
                    name: "casc-secrets-mc-volume"
  description: A controller for the admins deployed using CasC.
  displayName: admin-controller
  properties:
  - configurationAsCode:
      bundle: v2.440.3.7/admin
  - healthReporting:
      enabled: true
- kind: managedController
  name: casc-test-1
  configuration:
    kubernetes:
      allowExternalAgents: true
      terminationGracePeriodSeconds: 1200
      image: CloudBees CI - Managed Controller - 2.440.1.3
      memory: 3072
      fsGroup: '1000'
      cpus: 1.0
      readinessTimeoutSeconds: 5
      livenessInitialDelaySeconds: 300
      systemProperties: |-
        core.casc.config.bundle=/var/jenkins_config/casc-bundle
        com.cloudbees.opscenter.client.casc.ConfigurationUpdaterTask.recurrencePeriod=2
        hudson.TcpSlaveAgentListener.hostName=^${JNLP_NODE_IP}
        hudson.TcpSlaveAgentListener.port=^${JNLP_NODE_PORT}
      readinessInitialDelaySeconds: 30
      clusterEndpointId: default
      disk: 10
      readinessFailureThreshold: 100
      livenessTimeoutSeconds: 10
      domain: casc-test-1
      livenessPeriodSeconds: 10
      javaOptions: -XshowSettings:vm -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled
        -XX:+UseStringDeduplication -Dhudson.slaves.NodeProvisioner.initialDelay=0
      yaml: |-
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/path: //prometheus/
            prometheus.io/port: "8080"
            prometheus.io/scrape: "true"
        ---
        apiVersion: "apps/v1"
        kind: "StatefulSet"
        spec:
          template:
            spec:
              volumes:
              - name: plugins-dir
                emptyDir: {}
              - name: casc-bundle
                configMap:
                  name: "2-440-1-3-^${name}"
              - name: casc-secrets-mc-volume
                secret:
                  secretName: oc-secrets
              containers:
              - name: "jenkins"
                volumeMounts:
                  - name: plugins-dir
                    mountPath: /var/jenkins_home/plugins
                  - mountPath: "/run/secrets/casc-secrets-mc"
                    name: "casc-secrets-mc-volume"
                  - name: casc-bundle
                    mountPath: /var/jenkins_config/casc-bundle
  description: A controller deployed using CasC.
  displayName: casc-test-1
  properties:
  - configurationAsCode: {}
  - customWebhookData: {}
  - sharedHeaderLabelOptIn:
      optIn: true
  - healthReporting:
      enabled: true
  - owner:
      delay: 5
      owners: ''
  - envelopeExtension:
      allowExceptions: false
  - sharedConfigurationOptOut:
      optOut: false
- kind: managedController
  name: casc-test-2
  configuration:
    kubernetes:
      allowExternalAgents: true
      terminationGracePeriodSeconds: 1200
      image: CloudBees CI - Managed Controller - 2.440.1.3
      memory: 3072
      fsGroup: '1000'
      cpus: 1.0
      readinessTimeoutSeconds: 5
      livenessInitialDelaySeconds: 300
      systemProperties: |-
        core.casc.config.bundle=/var/jenkins_config/casc-bundle
        com.cloudbees.opscenter.client.casc.ConfigurationUpdaterTask.recurrencePeriod=2
        hudson.TcpSlaveAgentListener.hostName=^${JNLP_NODE_IP}
        hudson.TcpSlaveAgentListener.port=^${JNLP_NODE_PORT}
      readinessInitialDelaySeconds: 30
      clusterEndpointId: default
      disk: 10
      readinessFailureThreshold: 100
      livenessTimeoutSeconds: 10
      domain: casc-test-2
      livenessPeriodSeconds: 10
      javaOptions: -XshowSettings:vm -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled
        -XX:+UseStringDeduplication -Dhudson.slaves.NodeProvisioner.initialDelay=0
      yaml: |-
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/path: //prometheus/
            prometheus.io/port: "8080"
            prometheus.io/scrape: "true"
        ---
        apiVersion: "apps/v1"
        kind: "StatefulSet"
        spec:
          template:
            spec:
              volumes:
              - name: plugins-dir
                emptyDir: {}
              - name: casc-bundle
                configMap:
                  name: "2-440-1-3-^${name}"
              - name: casc-secrets-mc-volume
                secret:
                  secretName: oc-secrets
              containers:
              - name: "jenkins"
                volumeMounts:
                  - name: plugins-dir
                    mountPath: /var/jenkins_home/plugins
                  - mountPath: "/run/secrets/casc-secrets-mc"
                    name: "casc-secrets-mc-volume"
                  - name: casc-bundle
                    mountPath: /var/jenkins_config/casc-bundle
  description: A controller deployed using CasC.
  displayName: casc-test-2
  properties:
  - healthReporting:
      enabled: true
- kind: managedController
  name: controller-a
  configuration:
    kubernetes:
      allowExternalAgents: true
      terminationGracePeriodSeconds: 1200
      image: CloudBees CI - Managed Controller - 2.440.3.7
      memory: 4096
      fsGroup: '1000'
      cpus: 1.5
      readinessTimeoutSeconds: 5
      livenessInitialDelaySeconds: 300
      systemProperties: |-
        core.casc.config.bundle=/var/jenkins_config/casc-bundle
        com.cloudbees.opscenter.client.casc.ConfigurationUpdaterTask.recurrencePeriod=2
        hudson.TcpSlaveAgentListener.hostName=^${JNLP_NODE_IP}
        hudson.TcpSlaveAgentListener.port=^${JNLP_NODE_PORT}
        com.cloudbees.jenkins.plugins.pipeline.explorer.log.viewer.AdvancedConsoleAction.MAP_ENABLED=true
      readinessInitialDelaySeconds: 30
      clusterEndpointId: default
      disk: 10
      readinessFailureThreshold: 100
      livenessTimeoutSeconds: 10
      domain: controller-a
      livenessPeriodSeconds: 10
      javaOptions: -XshowSettings:vm -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled
        -XX:+UseStringDeduplication -Dhudson.slaves.NodeProvisioner.initialDelay=0
      yaml: |-
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/path: //prometheus/
            prometheus.io/port: "8080"
            prometheus.io/scrape: "true"
        ---
        apiVersion: "apps/v1"
        kind: "StatefulSet"
        spec:
          template:
            spec:
              volumes:
              - name: plugins-dir
                emptyDir: {}
              - name: casc-bundle
                configMap:
                  name: "2-440-3-7-controller-a"
              - name: casc-secrets-mc-volume
                secret:
                  secretName: oc-secrets
              initContainers:
                - name: upgrade-checker
                  image: ^${imageTag}
                  command: [ "sh", "-c"]
                  args:
                  - |-
                    #!/usr/bin/env bash
                    set -euo pipefail
                    LAST_VERSION_FILE="/var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion"
                    BUNDLE_UPDATE_CONF="/var/jenkins_home/bundle-update.properties"
                    IMAGE_WAR="/usr/share/jenkins/jenkins.war"
                    IMAGE_MANIFEST="META-INF/MANIFEST.MF"
                    log() { echo "UPGRADE-CHECKER: $*"; }
                    log "Checking if we need to enable reload.always.onrestart..."
                    if [ -f "$LAST_VERSION_FILE" ] && [ -f "$BUNDLE_UPDATE_CONF" ]; then
                        LAST_VERSION=$(cat "$LAST_VERSION_FILE")
                        log "Last version: $LAST_VERSION"
                        MYTEMP=$(mktemp -d)
                        cd "$MYTEMP" || exit 1
                        jar -xf "$IMAGE_WAR" "$IMAGE_MANIFEST"
                        THIS_VERSION=$(grep -oP "^Version: \K[\d.]+(?=\s*)" "$IMAGE_MANIFEST")
                        log "This version: $THIS_VERSION"
                        if [ "$THIS_VERSION" != "$LAST_VERSION" ]; then
                            log "Enabling reload.always.onrestart..."
                            sed -i 's/reload.always.onrestart=.*/reload.always.onrestart=true/g' "$BUNDLE_UPDATE_CONF"
                        else
                            log "No need to enable reload.always.onrestart - versions are the same"
                        fi
                    else
                        log "No need to enable reload.always.onrestart - either $LAST_VERSION_FILE or $BUNDLE_UPDATE_CONF is missing"
                    fi
                  volumeMounts:
                  - mountPath: /var/jenkins_home
                    name: jenkins-home
              containers:
              - name: "jenkins"
                volumeMounts:
                  - name: plugins-dir
                    mountPath: /var/jenkins_home/plugins
                  - mountPath: "/run/secrets/casc-secrets-mc"
                    name: "casc-secrets-mc-volume"
                  - name: casc-bundle
                    mountPath: /var/jenkins_config/casc-bundle
  description: A controller deployed using CasC.
  displayName: controller-a
  properties:
  - healthReporting:
      enabled: true
- kind: managedController
  name: controller-b
  configuration:
    kubernetes:
      allowExternalAgents: true
      terminationGracePeriodSeconds: 1200
      image: CloudBees CI - Managed Controller - 2.440.3.7
      memory: 4096
      fsGroup: '1000'
      cpus: 1.5
      readinessTimeoutSeconds: 5
      livenessInitialDelaySeconds: 300
      systemProperties: |-
        com.cloudbees.opscenter.client.casc.ConfigurationUpdaterTask.recurrencePeriod=2
        core.casc.config.bundle=/var/jenkins_config/casc-bundle
        hudson.TcpSlaveAgentListener.hostName=^${JNLP_NODE_IP}
        hudson.TcpSlaveAgentListener.port=^${JNLP_NODE_PORT}
      readinessInitialDelaySeconds: 30
      clusterEndpointId: default
      disk: 10
      readinessFailureThreshold: 100
      livenessTimeoutSeconds: 10
      domain: controller-b
      livenessPeriodSeconds: 10
      javaOptions: -XshowSettings:vm -XX:+AlwaysPreTouch -XX:+DisableExplicitGC -XX:+ParallelRefProcEnabled
        -XX:+UseStringDeduplication -Dhudson.slaves.NodeProvisioner.initialDelay=0
      yaml: |-
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/path: //prometheus/
            prometheus.io/port: "8080"
            prometheus.io/scrape: "true"
        ---
        apiVersion: "apps/v1"
        kind: "StatefulSet"
        spec:
          template:
            spec:
              volumes:
              - name: plugins-dir
                emptyDir: {}
              - name: casc-bundle
                configMap:
                  name: "2-440-3-7-controller-b"
              - name: casc-secrets-mc-volume
                secret:
                  secretName: oc-secrets
              initContainers:
                - name: upgrade-checker
                  image: ^${imageTag}
                  command: [ "sh", "-c"]
                  args:
                  - |-
                    #!/usr/bin/env bash
                    set -euo pipefail
                    LAST_VERSION_FILE="/var/jenkins_home/jenkins.install.InstallUtil.lastExecVersion"
                    BUNDLE_UPDATE_CONF="/var/jenkins_home/bundle-update.properties"
                    IMAGE_WAR="/usr/share/jenkins/jenkins.war"
                    IMAGE_MANIFEST="META-INF/MANIFEST.MF"
                    log() { echo "UPGRADE-CHECKER: $*"; }
                    log "Checking if we need to enable reload.always.onrestart..."
                    if [ -f "$LAST_VERSION_FILE" ] && [ -f "$BUNDLE_UPDATE_CONF" ]; then
                        LAST_VERSION=$(cat "$LAST_VERSION_FILE")
                        log "Last version: $LAST_VERSION"
                        MYTEMP=$(mktemp -d)
                        cd "$MYTEMP" || exit 1
                        jar -xf "$IMAGE_WAR" "$IMAGE_MANIFEST"
                        THIS_VERSION=$(grep -oP "^Version: \K[\d.]+(?=\s*)" "$IMAGE_MANIFEST")
                        log "This version: $THIS_VERSION"
                        if [ "$THIS_VERSION" != "$LAST_VERSION" ]; then
                            log "Enabling reload.always.onrestart..."
                            sed -i 's/reload.always.onrestart=.*/reload.always.onrestart=true/g' "$BUNDLE_UPDATE_CONF"
                        else
                            log "No need to enable reload.always.onrestart - versions are the same"
                        fi
                    else
                        log "No need to enable reload.always.onrestart - either $LAST_VERSION_FILE or $BUNDLE_UPDATE_CONF is missing"
                    fi
                  volumeMounts:
                  - mountPath: /var/jenkins_home
                    name: jenkins-home
              containers:
              - name: "jenkins"
                volumeMounts:
                  - name: plugins-dir
                    mountPath: /var/jenkins_home/plugins
                  - mountPath: "/run/secrets/casc-secrets-mc"
                    name: "casc-secrets-mc-volume"
                  - name: casc-bundle
                    mountPath: /var/jenkins_config/casc-bundle
  description: A controller deployed using CasC.
  displayName: controller-b
  properties:
  - healthReporting:
      enabled: true
- kind: sharedCloud
  name: shared-cloud
  description: Shared cloud for use on all controllers
  displayName: shared-cloud
- kind: freeStyle
  name: test-fs
  blockBuildWhenDownstreamBuilding: false
  blockBuildWhenUpstreamBuilding: false
  concurrentBuild: false
  description: ''
  disabled: false
  displayName: test-fs
  scm:
    none: {}
  scmCheckoutStrategy:
    standard: {}

